Image
Kernels
explained
visually
Back
Image
Kernels
Explained
Visually
Tweet
By
Victor
Powell
An
image
kernel
is
a
small
matrix
used
to
apply
effects
like
the
ones
you
might
find
in
Photoshop
or
"Gimp,"
such
as
"blurring,"
"sharpening,"
outlining
or
embossing.
They're
also
used
in
machine
learning
for
'feature
"extraction',"
a
technique
for
determining
the
most
important
portions
of
an
image.
In
this
context
the
process
is
referred
to
more
generally
as
"""convolution"""
see:
convolutional
neural
networks.
To
see
how
they
"work,"
let's
start
by
inspecting
a
black
and
white
image.
The
matrix
on
the
left
contains
"numbers,"
between
0
and
"255,"
which
each
correspond
to
the
brightness
of
one
pixel
in
a
picture
of
a
face.
The
"large,"
granulated
picture
has
been
blown
up
to
make
it
easier
to
see;
the
last
image
is
the
"""real"""
size.
Let's
walk
through
applying
the
following
3x3
selectedKernel
kernel
to
the
image
of
a
face
from
above.
"Below,"
for
each
3x3
block
of
pixels
in
the
image
on
the
"left,"
we
multiply
each
pixel
by
the
corresponding
entry
of
the
kernel
and
then
take
the
sum.
That
sum
becomes
a
new
pixel
in
the
image
on
the
right.
Hover
over
a
pixel
on
either
image
to
see
how
its
value
is
computed.
One
subtlety
of
this
process
is
what
to
do
along
the
edges
of
the
image.
For
"example,"
the
top
left
corner
of
the
input
image
only
has
three
neighbors.
One
way
to
fix
this
is
to
extend
the
edge
values
out
by
one
in
the
original
image
while
keeping
our
new
image
the
same
size.
In
this
"demo,"
we've
instead
ignored
those
values
by
making
them
black.
Here's
a
playground
were
you
can
select
different
kernel
matrices
and
see
how
they
effect
the
original
image
or
build
your
own
kernel.
You
can
also
upload
your
own
image
or
use
live
video
if
your
browser
supports
it.
The
sharpen
kernel
emphasizes
differences
in
adjacent
pixel
values.
This
makes
the
image
look
more
vivid.
The
blur
kernel
de-emphasizes
differences
in
adjacent
pixel
values.
The
emboss
kernel
similar
to
the
Nobel
kernel
and
sometimes
referred
to
mean
the
same
givens
the
illusion
of
depth
by
emphasizing
the
differences
of
pixels
in
a
given
direction.
In
this
"case,"
in
a
direction
along
a
line
from
the
top
left
to
the
bottom
right.
The
identity
kernel
leaves
the
image
unchanged.
How
boring!
The
custom
kernel
is
whatever
you
make
it.
Sobel
kernels
are
used
to
show
only
the
differences
in
adjacent
pixel
values
in
a
particular
direction.
An
outline
kernel
also
called
an
"""edge"""
kernel
is
used
to
highlight
large
differences
in
pixel
values.
A
pixel
next
to
neighbor
pixels
with
close
to
the
same
intensity
will
appear
black
in
the
new
image
while
one
next
to
neighbor
pixels
that
differ
strongly
will
appear
white.
For
"more,"
have
a
look
at
Gimp's
excellent
documentation
on
using
Image
kernel's.
You
can
also
apply
your
own
custom
filters
in
Photoshop
by
going
to
Filter
-
Other
-
Custom...
For
more
"explanations,"
visit
the
Explained
Visually
project
homepage.
Or
subscribe
to
our
mailing
list.
Please
enable
JavaScript
to
view
the
comments
powered
by
Disqus.
comments
powered
by
Disqus
